# SAM Docker Compose Configuration
# Sprint 13 Task 3: Deployment Files

version: '3.8'

services:
  sam:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sam-app
    restart: unless-stopped
    ports:
      - "${SAM_CHAT_PORT:-5001}:5001"
      - "${SAM_MEMORY_UI_PORT:-8501}:8501"
    environment:
      - SAM_AGENT_MODE=${SAM_AGENT_MODE:-solo}
      - SAM_MEMORY_BACKEND=${SAM_MEMORY_BACKEND:-simple}
      - SAM_MODEL_PROVIDER=${SAM_MODEL_PROVIDER:-ollama}
      - SAM_MODEL_NAME=${SAM_MODEL_NAME:-hf.co/unsloth/DeepSeek-R1-0528-Qwen3-8B-GGUF:Q4_K_M}
      - SAM_MODEL_API_URL=${SAM_MODEL_API_URL:-http://ollama:11434}
      - SAM_DEBUG=${SAM_DEBUG:-false}
      - SAM_LOG_LEVEL=${SAM_LOG_LEVEL:-INFO}
      - SAM_ENABLE_AUTH=${SAM_ENABLE_AUTH:-false}
      - SAM_AUTH_SECRET_KEY=${SAM_AUTH_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - sam_config:/app/config
      - sam_memory:/app/memory_store
      - sam_logs:/app/logs
      - sam_backups:/app/backups
    depends_on:
      - ollama
    networks:
      - sam-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  ollama:
    image: ollama/ollama:latest
    container_name: sam-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - sam-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: sam-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - sam-network
  #   command: redis-server --appendonly yes

  # Optional: PostgreSQL for advanced memory storage (uncomment if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: sam-postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: sam_memory
  #     POSTGRES_USER: sam
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sam_password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - sam-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U sam"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

volumes:
  sam_config:
    driver: local
  sam_memory:
    driver: local
  sam_logs:
    driver: local
  sam_backups:
    driver: local
  ollama_data:
    driver: local
  # redis_data:
  #   driver: local
  # postgres_data:
  #   driver: local

networks:
  sam-network:
    driver: bridge
